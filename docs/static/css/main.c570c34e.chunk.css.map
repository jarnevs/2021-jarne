{"version":3,"sources":["webpack://src/scss/abstracts/fonts.scss","webpack://node_modules/bootstrap/scss/_containers.scss","webpack://node_modules/bootstrap/scss/mixins/_container.scss","webpack://node_modules/bootstrap/scss/mixins/_breakpoints.scss","webpack://node_modules/bootstrap/scss/mixins/_grid.scss","webpack://src/scss/base/index.scss","webpack://src/scss/abstracts/variables.scss","webpack://src/scss/layout/header.scss","webpack://src/scss/layout/footer.scss","webpack://src/scss/components/dropdown.scss","webpack://src/scss/components/cards.scss","webpack://src/scss/pages/events.scss"],"names":[],"mappings":"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","file":"main.c570c34e.chunk.css","sourcesContent":["@font-face {\r\n  font-family: \"Gilory\";\r\n  src: url(\"../../fonts/gilroy-bold-webfont.woff2\") format(\"woff2\"),\r\n    url(\"../../fonts/gilroy-bold-webfont.woff\") format(\"woff\");\r\n  font-weight: 700;\r\n  font-style: normal;\r\n}\r\n\r\n@font-face {\r\n  font-family: \"Gilory\";\r\n  src: url(\"../../fonts/gilroy-regular-webfont.woff2\") format(\"woff2\"),\r\n    url(\"../../fonts/gilroy-regular-webfont.woff\") format(\"woff\");\r\n  font-weight: 400;\r\n  font-style: normal;\r\n}\r\n","// Container widths\n//\n// Set the container width, and override it for fixed navbars in media queries.\n\n@if $enable-grid-classes {\n  // Single container class with breakpoint max-widths\n  .container,\n  // 100% wide container at all breakpoints\n  .container-fluid {\n    @include make-container();\n  }\n\n  // Responsive containers that are 100% wide until a breakpoint\n  @each $breakpoint, $container-max-width in $container-max-widths {\n    .container-#{$breakpoint} {\n      @extend .container-fluid;\n    }\n\n    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {\n      %responsive-container-#{$breakpoint} {\n        max-width: $container-max-width;\n      }\n\n      // Extend each breakpoint which is smaller or equal to the current breakpoint\n      $extend-breakpoint: true;\n\n      @each $name, $width in $grid-breakpoints {\n        @if ($extend-breakpoint) {\n          .container#{breakpoint-infix($name, $grid-breakpoints)} {\n            @extend %responsive-container-#{$breakpoint};\n          }\n\n          // Once the current breakpoint is reached, stop extending\n          @if ($breakpoint == $name) {\n            $extend-breakpoint: false;\n          }\n        }\n      }\n    }\n  }\n}\n","// Container mixins\n\n@mixin make-container($gutter: $container-padding-x) {\n  width: 100%;\n  padding-right: var(--#{$variable-prefix}gutter-x, #{$gutter});\n  padding-left: var(--#{$variable-prefix}gutter-x, #{$gutter});\n  margin-right: auto;\n  margin-left: auto;\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n","// Grid system\n//\n// Generate semantic grid columns with these mixins.\n\n@mixin make-row($gutter: $grid-gutter-width) {\n  --#{$variable-prefix}gutter-x: #{$gutter};\n  --#{$variable-prefix}gutter-y: 0;\n  display: flex;\n  flex-wrap: wrap;\n  // TODO: Revisit calc order after https://github.com/react-bootstrap/react-bootstrap/issues/6039 is fixed\n  margin-top: calc(-1 * var(--#{$variable-prefix}gutter-y)); // stylelint-disable-line function-disallowed-list\n  margin-right: calc(-.5 * var(--#{$variable-prefix}gutter-x)); // stylelint-disable-line function-disallowed-list\n  margin-left: calc(-.5 * var(--#{$variable-prefix}gutter-x)); // stylelint-disable-line function-disallowed-list\n}\n\n@mixin make-col-ready($gutter: $grid-gutter-width) {\n  // Add box sizing if only the grid is loaded\n  box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\n  // always setting `width: 100%;`. This works because we set the width\n  // later on to override this initial width.\n  flex-shrink: 0;\n  width: 100%;\n  max-width: 100%; // Prevent `.col-auto`, `.col` (& responsive variants) from breaking out the grid\n  padding-right: calc(var(--#{$variable-prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  padding-left: calc(var(--#{$variable-prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  margin-top: var(--#{$variable-prefix}gutter-y);\n}\n\n@mixin make-col($size: false, $columns: $grid-columns) {\n  @if $size {\n    flex: 0 0 auto;\n    width: percentage(divide($size, $columns));\n\n  } @else {\n    flex: 1 1 0;\n    max-width: 100%;\n  }\n}\n\n@mixin make-col-auto() {\n  flex: 0 0 auto;\n  width: auto;\n}\n\n@mixin make-col-offset($size, $columns: $grid-columns) {\n  $num: divide($size, $columns);\n  margin-left: if($num == 0, 0, percentage($num));\n}\n\n// Row columns\n//\n// Specify on a parent element(e.g., .row) to force immediate children into NN\n// numberof columns. Supports wrapping to new lines, but does not do a Masonry\n// style grid.\n@mixin row-cols($count) {\n  > * {\n    flex: 0 0 auto;\n    width: divide(100%, $count);\n  }\n}\n\n// Framework grid generation\n//\n// Used only by Bootstrap to generate the correct number of grid classes given\n// any value of `$grid-columns`.\n\n@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      // Provide basic `.col-{bp}` classes for equal-width flexbox columns\n      .col#{$infix} {\n        flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4\n      }\n\n      .row-cols#{$infix}-auto > * {\n        @include make-col-auto();\n      }\n\n      @if $grid-row-columns > 0 {\n        @for $i from 1 through $grid-row-columns {\n          .row-cols#{$infix}-#{$i} {\n            @include row-cols($i);\n          }\n        }\n      }\n\n      .col#{$infix}-auto {\n        @include make-col-auto();\n      }\n\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .col#{$infix}-#{$i} {\n            @include make-col($i, $columns);\n          }\n        }\n\n        // `$columns - 1` because offsetting by the width of an entire row isn't possible\n        @for $i from 0 through ($columns - 1) {\n          @if not ($infix == \"\" and $i == 0) { // Avoid emitting useless .offset-0\n            .offset#{$infix}-#{$i} {\n              @include make-col-offset($i, $columns);\n            }\n          }\n        }\n      }\n\n      // Gutters\n      //\n      // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.\n      @each $key, $value in $gutters {\n        .g#{$infix}-#{$key},\n        .gx#{$infix}-#{$key} {\n          --#{$variable-prefix}gutter-x: #{$value};\n        }\n\n        .g#{$infix}-#{$key},\n        .gy#{$infix}-#{$key} {\n          --#{$variable-prefix}gutter-y: #{$value};\n        }\n      }\n    }\n  }\n}\n\n@mixin make-cssgrid($columns: $grid-columns, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .g-col#{$infix}-#{$i} {\n            grid-column: auto / span $i;\n          }\n        }\n\n        // Start with `1` because `0` is and invalid value.\n        // Ends with `$columns - 1` because offsetting by the width of an entire row isn't possible.\n        @for $i from 1 through ($columns - 1) {\n          .g-start#{$infix}-#{$i} {\n            grid-column-start: $i;\n          }\n        }\n      }\n    }\n  }\n}\n","* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: $primary-font;\r\n}\r\n\r\nbody {\r\n  overflow-x: hidden;\r\n  font-family: $primary-font;\r\n  line-height: 1.5;\r\n}\r\n\r\nmain {\r\n  margin-bottom: 100px;\r\n}\r\n\r\n.content-container {\r\n  margin: 0 auto;\r\n  width: 80%;\r\n}\r\n\r\n.title-page {\r\n  overflow: hidden;\r\n  position: relative;\r\n  height: 250px;\r\n  background: $blue-dark;\r\n\r\n  & > h1 {\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: -100px;\r\n    transform: translateX(-50%);\r\n\r\n    color: $white-transparent;\r\n  }\r\n}\r\n\r\nh1 {\r\n  font-size: 8.625rem;\r\n  font-weight: 700;\r\n  text-transform: uppercase;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.125rem;\r\n  color: $blue-dark;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n\r\np {\r\n  font-size: 1rem;\r\n}\r\n\r\n@media (max-width: 1400px) {\r\n  .content-container {\r\n    width: 80%;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .content-container {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n  .title-page {\r\n    h1 {\r\n      bottom: -70px;\r\n    }\r\n  }\r\n\r\n  h1 {\r\n    font-size: 100px;\r\n  }\r\n}\r\n","// colors\r\n$white: #fff;\r\n$white-transparent: rgba(255, 255, 255, 0.2);\r\n$black: #011627;\r\n\r\n$grey-light: #e1e8e9;\r\n$grey-darker: #b5c5c9;\r\n$grey-darker-transparent: rgba(181, 197, 201, 0.4);\r\n$grey-dark: #495864;\r\n\r\n$green: #29f29b;\r\n$blue-light: #0ad3ff;\r\n$blue-dark: #024cff;\r\n\r\n// fonts\r\n$primary-font: \"Gilory\", sans-serif;\r\n\r\n// grid\r\n$container-max-widths: (\r\n  sm: 540px,\r\n  md: 720px,\r\n  lg: 960px,\r\n  xl: 1200px,\r\n  xxl: 1320px,\r\n);\r\n\r\n$grid-gutter-width: 3rem;\r\n","header {\r\n  background: $blue-dark;\r\n  padding: 41px 0;\r\n}\r\n\r\n.logo {\r\n  img {\r\n    width: 230px;\r\n    height: auto;\r\n  }\r\n}\r\n\r\n.nav-language {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.main-nav {\r\n  width: 80%;\r\n\r\n  &__list {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    list-style: none;\r\n  }\r\n\r\n  &__link {\r\n    display: flex;\r\n    align-items: baseline;\r\n    color: $white;\r\n    font-size: 1.125rem;\r\n    font-weight: 700;\r\n\r\n    span {\r\n      margin-right: 4px;\r\n    }\r\n\r\n    .fa-xs {\r\n      font-size: 0.5rem;\r\n    }\r\n\r\n    &--active,\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n}\r\n\r\n.language {\r\n  margin-top: -8px;\r\n\r\n  &__choice {\r\n    display: inline-block;\r\n    border-radius: 20px;\r\n    color: $white;\r\n    font-weight: 700;\r\n    text-align: center;\r\n    line-height: 40px;\r\n\r\n    &:last-child {\r\n      margin-left: 20px;\r\n    }\r\n\r\n    &--active {\r\n      width: 40px;\r\n      height: 40px;\r\n      background-color: $white-transparent;\r\n    }\r\n\r\n    &:not(&--active):hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n}\r\n\r\n.hamburger-icon,\r\n.close-icon {\r\n  display: none;\r\n\r\n  button {\r\n    cursor: pointer;\r\n    border: 0;\r\n    background: none;\r\n  }\r\n}\r\n\r\n@media (max-width: 992px) {\r\n  .hamburger-icon {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  .close-icon {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  .nav-language {\r\n    background: $blue-dark;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 5;\r\n    width: 30%;\r\n    height: 100vh;\r\n    padding: 50px;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    transform: translateX(100%);\r\n    transition: transform 0.2s ease-in-out;\r\n\r\n    &--open {\r\n      transform: translateX(0);\r\n    }\r\n  }\r\n\r\n  .main-nav {\r\n    margin-top: 50px;\r\n\r\n    &__list {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n\r\n      li {\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .language {\r\n    margin-top: 20px;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .nav-language {\r\n    width: 40%;\r\n  }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n  .nav-language {\r\n    width: 60%;\r\n  }\r\n}\r\n","footer {\r\n  background: $black;\r\n  color: $white;\r\n  padding: 50px 0;\r\n\r\n  a {\r\n    color: $white;\r\n\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n}\r\n\r\n.error-report {\r\n  padding-bottom: 40px;\r\n  border-bottom: 1px solid $white-transparent;\r\n\r\n  a {\r\n    font-weight: 700;\r\n    text-decoration: underline;\r\n\r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n}\r\n\r\n.company-info {\r\n  margin-top: 40px;\r\n  margin-bottom: 90px;\r\n}\r\n\r\n.social {\r\n  margin-top: 45px;\r\n\r\n  a:not(:last-child) {\r\n    display: inline-block;\r\n    margin-right: 20px;\r\n  }\r\n}\r\n\r\n.contact {\r\n  font-style: normal;\r\n\r\n  &__address {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__info {\r\n    div > a {\r\n      display: inline-block;\r\n      margin-left: 5px;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n}\r\n\r\n.sponsors {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.main-sponsor {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 20px;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .sponsors {\r\n    div {\r\n      margin: 0 10px;\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: 992px) {\r\n  .contact {\r\n    margin: 30px 0;\r\n  }\r\n}\r\n",".dropdown {\r\n  position: relative;\r\n  top: 0;\r\n  z-index: 2;\r\n  width: 250px;\r\n  border: 1px solid $grey-darker;\r\n  padding: 10px 20px;\r\n\r\n  &__title {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    p {\r\n      font-weight: 700;\r\n      color: $grey-dark;\r\n    }\r\n  }\r\n\r\n  &__list {\r\n    list-style: none;\r\n    position: absolute;\r\n    left: -1px;\r\n    background: $white;\r\n    width: 250px;\r\n    border: 1px solid $grey-darker;\r\n    border-top: 0;\r\n    padding: 20px;\r\n\r\n    button {\r\n      background: none;\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  &:first-child {\r\n    z-index: 4;\r\n  }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n  .dropdown {\r\n    width: 100%;\r\n\r\n    &__list {\r\n      width: calc(100% + 2px);\r\n    }\r\n  }\r\n}\r\n",".cards {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 50px;\r\n\r\n  .card:not(:nth-child(3n + 3)) {\r\n    margin-right: 3.5%;\r\n  }\r\n}\r\n\r\n.card {\r\n  flex: 0 0 31%;\r\n  height: 345px;\r\n  color: $black;\r\n\r\n  &__image {\r\n    width: 100%;\r\n    height: 50%;\r\n\r\n    img {\r\n      object-fit: cover;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  &__content {\r\n    min-height: 40%;\r\n\r\n    p {\r\n      margin-top: 10px;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n\r\n  &__tags {\r\n    span {\r\n      display: inline-block;\r\n      border: 1px solid $blue-dark;\r\n      padding: 1px 7px;\r\n      font-size: 0.75rem;\r\n      color: $blue-dark;\r\n\r\n      &:not(:last-child) {\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: 992px) {\r\n  .cards {\r\n    .card:not(:nth-child(3n + 3)) {\r\n      margin-right: 0%;\r\n    }\r\n\r\n    .card:not(:nth-child(2n + 2)) {\r\n      margin-right: 4%;\r\n    }\r\n  }\r\n\r\n  .card {\r\n    margin-bottom: 40px;\r\n    flex: 0 0 48%;\r\n  }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n  .cards {\r\n    .card:not(:nth-child(2n + 2)) {\r\n      margin-right: 0%;\r\n    }\r\n\r\n    .card:last-child {\r\n      margin-bottom: 0px;\r\n    }\r\n  }\r\n\r\n  .card {\r\n    flex: 0 0 100%;\r\n    &__content {\r\n      min-height: auto;\r\n      margin-bottom: 30px;\r\n    }\r\n  }\r\n}\r\n",".filter {\r\n  margin-top: 50px;\r\n  margin-bottom: 20px;\r\n\r\n  &__title {\r\n    font-weight: 700;\r\n    color: $black;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2px;\r\n  }\r\n\r\n  &__choices {\r\n    margin-top: -10px;\r\n  }\r\n\r\n  &__dropdowns {\r\n    position: relative;\r\n    display: flex;\r\n\r\n    .dropdown {\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n\r\n  &__chosen {\r\n    margin-top: 20px;\r\n\r\n    p {\r\n      display: inline-block;\r\n      background-color: $grey-light;\r\n      border: 1px solid #c7d3d6;\r\n      border-radius: 3px;\r\n      padding: 4px 10px;\r\n      font-size: 0.75rem;\r\n      color: $grey-dark;\r\n\r\n      span {\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.year-month {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 30px;\r\n  border-bottom: 1px solid $grey-darker-transparent;\r\n\r\n  p {\r\n    font-size: 0.875rem;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2px;\r\n\r\n    &:last-child {\r\n      color: $grey-darker;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: 992px) {\r\n  .filter {\r\n    flex-direction: column;\r\n\r\n    &__choices {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n  .filter {\r\n    &__dropdowns {\r\n      flex-direction: column;\r\n\r\n      .dropdown:first-child {\r\n        margin-bottom: 10px;\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}